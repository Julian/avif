name: Packaging

on:
  push:
  release:
    types: [published]

jobs:
  wheels:
    name: Build ${{ matrix.os }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]

    env:
      CIBW_SKIP: cp27-*
      CIBW_BEFORE_ALL: >
        pip install cmake>=3.5 &&
        curl -L 'https://github.com/AOMediaCodec/libavif/archive/v0.8.4.tar.gz' | tar xzf - &&
        cd libavif* &&
        mkdir build && cd build &&
        cmake .. &&
        make -j $(($(nproc) + 1)) &&
        make install

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel
    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
    - uses: actions/upload-artifact@master
      with:
        name: wheelhouse-${{ matrix.os }}
        path: wheelhouse
    - name: Publish package
      run: python -m pip install twine && python -m twine upload wheelhouse/*
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password }}

  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: >
        curl -L 'https://github.com/AOMediaCodec/libavif/archive/v0.8.4.tar.gz' | tar xzf - &&
        cd libavif* &&
        mkdir build && cd build &&
        cmake .. &&
        make -j $(($(nproc) + 1)) &&
        sudo make install
    - name: Install python-build
      run: python -m pip install build
    - name: Create packages
      run: python -m build .
    - uses: actions/upload-artifact@master
      with:
        name: dist
        path: dist
    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
